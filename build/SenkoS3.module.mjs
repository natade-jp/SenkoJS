/*!
 * jptext.js
 * https://github.com/natade-jp/jptext
 * Copyright 2013-2019 natade < https://github.com/natade-jp >
 *
 * The MIT license.
 * https://opensource.org/licenses/MIT
 */
const S3Math={EPSILON:2.220446049250313e-8,clamp:function(t,e,i){return t<e?e:t>i?i:t},step:function(t,e){return t>e?1:0},mix:function(t,e,i){return t+(e-t)*i},smoothstep:function(t,e,i){return t+(e-t)*(i*i*(3-2*i))},equals:function(t,e){return Math.abs(t-e)<S3Math.EPSILON},mod:function(t,e){return t-e*parseInt(t/e)},sign:function(t){return t>=0?1:-1},fract:function(t){return t-Math.floor(t)},rsqrt:function(t){return Math.sqrt(1/t)},radius:function(t){return t/360*(2*Math.PI)},degrees:function(t){return t/(2*Math.PI)*360}};class S3Matrix{constructor(t,e,i,n,s,r,o,h,a,m,c,l,u,f,d,g){if(0===arguments.length)this.m00=0,this.m01=0,this.m02=0,this.m03=0,this.m10=0,this.m11=0,this.m12=0,this.m13=0,this.m20=0,this.m21=0,this.m22=0,this.m23=0,this.m30=0,this.m31=0,this.m32=0,this.m33=0;else if(9===arguments.length)this.m00=t,this.m01=e,this.m02=i,this.m03=0,this.m10=n,this.m11=s,this.m12=r,this.m13=0,this.m20=o,this.m21=h,this.m22=a,this.m23=0,this.m30=0,this.m31=0,this.m32=0,this.m33=1;else{if(16!==arguments.length)throw"IllegalArgumentException";this.m00=t,this.m01=e,this.m02=i,this.m03=n,this.m10=s,this.m11=r,this.m12=o,this.m13=h,this.m20=a,this.m21=m,this.m22=c,this.m23=l,this.m30=u,this.m31=f,this.m32=d,this.m33=g}}equals(t){return S3Math.equals(this.m00,t.m00)&&S3Math.equals(this.m01,t.m01)&&S3Math.equals(this.m02,t.m02)&&S3Math.equals(this.m03,t.m03)&&S3Math.equals(this.m10,t.m10)&&S3Math.equals(this.m11,t.m11)&&S3Math.equals(this.m12,t.m12)&&S3Math.equals(this.m13,t.m13)&&S3Math.equals(this.m20,t.m20)&&S3Math.equals(this.m21,t.m21)&&S3Math.equals(this.m22,t.m22)&&S3Math.equals(this.m23,t.m23)&&S3Math.equals(this.m30,t.m30)&&S3Math.equals(this.m31,t.m31)&&S3Math.equals(this.m32,t.m32)&&S3Math.equals(this.m33,t.m33)}clone(){return new S3Matrix(this.m00,this.m01,this.m02,this.m03,this.m10,this.m11,this.m12,this.m13,this.m20,this.m21,this.m22,this.m23,this.m30,this.m31,this.m32,this.m33)}transposed(){return new S3Matrix(this.m00,this.m10,this.m20,this.m30,this.m01,this.m11,this.m21,this.m31,this.m02,this.m12,this.m22,this.m32,this.m03,this.m13,this.m23,this.m33)}isNaN(){return isNaN(this.m00)||isNaN(this.m01)||isNaN(this.m02)||isNaN(this.m03)||isNaN(this.m10)||isNaN(this.m11)||isNaN(this.m12)||isNaN(this.m13)||isNaN(this.m20)||isNaN(this.m21)||isNaN(this.m22)||isNaN(this.m23)||isNaN(this.m30)||isNaN(this.m31)||isNaN(this.m32)||isNaN(this.m33)}isFinite(){return isFinite(this.m00)&&isFinite(this.m01)&&isFinite(this.m02)&&isFinite(this.m03)||isFinite(this.m10)&&isFinite(this.m11)&&isFinite(this.m12)&&isFinite(this.m13)||isFinite(this.m20)&&isFinite(this.m21)&&isFinite(this.m22)&&isFinite(this.m23)||isFinite(this.m30)&&isFinite(this.m31)&&isFinite(this.m32)&&isFinite(this.m33)}isRealNumber(){return!this.isNaN()&&this.isFinite()}mul(t){if(t instanceof S3Matrix){const e=this,i=t,n=new S3Matrix;return n.m00=e.m00*i.m00+e.m01*i.m10+e.m02*i.m20+e.m03*i.m30,n.m01=e.m00*i.m01+e.m01*i.m11+e.m02*i.m21+e.m03*i.m31,n.m02=e.m00*i.m02+e.m01*i.m12+e.m02*i.m22+e.m03*i.m32,n.m03=e.m00*i.m03+e.m01*i.m13+e.m02*i.m23+e.m03*i.m33,n.m10=e.m10*i.m00+e.m11*i.m10+e.m12*i.m20+e.m13*i.m30,n.m11=e.m10*i.m01+e.m11*i.m11+e.m12*i.m21+e.m13*i.m31,n.m12=e.m10*i.m02+e.m11*i.m12+e.m12*i.m22+e.m13*i.m32,n.m13=e.m10*i.m03+e.m11*i.m13+e.m12*i.m23+e.m13*i.m33,n.m20=e.m20*i.m00+e.m21*i.m10+e.m22*i.m20+e.m23*i.m30,n.m21=e.m20*i.m01+e.m21*i.m11+e.m22*i.m21+e.m23*i.m31,n.m22=e.m20*i.m02+e.m21*i.m12+e.m22*i.m22+e.m23*i.m32,n.m23=e.m20*i.m03+e.m21*i.m13+e.m22*i.m23+e.m23*i.m33,n.m30=e.m30*i.m00+e.m31*i.m10+e.m32*i.m20+e.m33*i.m30,n.m31=e.m30*i.m01+e.m31*i.m11+e.m32*i.m21+e.m33*i.m31,n.m32=e.m30*i.m02+e.m31*i.m12+e.m32*i.m22+e.m33*i.m32,n.m33=e.m30*i.m03+e.m31*i.m13+e.m32*i.m23+e.m33*i.m33,n}if(t instanceof S3Vector){const e=this,i=t;return new S3Vector(e.m00*i.x+e.m01*i.y+e.m02*i.z+e.m03*i.w,e.m10*i.x+e.m11*i.y+e.m12*i.z+e.m13*i.w,e.m20*i.x+e.m21*i.y+e.m22*i.z+e.m23*i.w,e.m30*i.x+e.m31*i.y+e.m32*i.z+e.m33*i.w)}throw"IllegalArgumentException"}det3(){const t=this;let e;return e=t.m00*t.m11*t.m22,e+=t.m10*t.m21*t.m02,e+=t.m20*t.m01*t.m12,e-=t.m00*t.m21*t.m12,e-=t.m20*t.m11*t.m02,e-=t.m10*t.m01*t.m22}inverse3(){const t=this,e=t.det3();if(0===e)return null;const i=1/e,n=t.clone();return n.m00=(t.m11*t.m22-t.m12*t.m21)*i,n.m01=(t.m02*t.m21-t.m01*t.m22)*i,n.m02=(t.m01*t.m12-t.m02*t.m11)*i,n.m10=(t.m12*t.m20-t.m10*t.m22)*i,n.m11=(t.m00*t.m22-t.m02*t.m20)*i,n.m12=(t.m02*t.m10-t.m00*t.m12)*i,n.m20=(t.m10*t.m21-t.m11*t.m20)*i,n.m21=(t.m01*t.m20-t.m00*t.m21)*i,n.m22=(t.m00*t.m11-t.m01*t.m10)*i,n}det4(){const t=this;let e;return e=t.m00*t.m11*t.m22*t.m33,e+=t.m00*t.m12*t.m23*t.m31,e+=t.m00*t.m13*t.m21*t.m32,e+=t.m01*t.m10*t.m23*t.m32,e+=t.m01*t.m12*t.m20*t.m33,e+=t.m01*t.m13*t.m22*t.m30,e+=t.m02*t.m10*t.m21*t.m33,e+=t.m02*t.m11*t.m23*t.m30,e+=t.m02*t.m13*t.m20*t.m31,e+=t.m03*t.m10*t.m22*t.m31,e+=t.m03*t.m11*t.m20*t.m32,e+=t.m03*t.m12*t.m21*t.m30,e-=t.m00*t.m11*t.m23*t.m32,e-=t.m00*t.m12*t.m21*t.m33,e-=t.m00*t.m13*t.m22*t.m31,e-=t.m01*t.m10*t.m22*t.m33,e-=t.m01*t.m12*t.m23*t.m30,e-=t.m01*t.m13*t.m20*t.m32,e-=t.m02*t.m10*t.m23*t.m31,e-=t.m02*t.m11*t.m20*t.m33,e-=t.m02*t.m13*t.m21*t.m30,e-=t.m03*t.m10*t.m21*t.m32,e-=t.m03*t.m11*t.m22*t.m30,e-=t.m03*t.m12*t.m20*t.m31}inverse4(){const t=this,e=t.det4();if(0===e)return null;const i=1/e,n=new S3Matrix;return n.m00=(t.m11*t.m22*t.m33+t.m12*t.m23*t.m31+t.m13*t.m21*t.m32-t.m11*t.m23*t.m32-t.m12*t.m21*t.m33-t.m13*t.m22*t.m31)*i,n.m01=(t.m01*t.m23*t.m32+t.m02*t.m21*t.m33+t.m03*t.m22*t.m31-t.m01*t.m22*t.m33-t.m02*t.m23*t.m31-t.m03*t.m21*t.m32)*i,n.m02=(t.m01*t.m12*t.m33+t.m02*t.m13*t.m31+t.m03*t.m11*t.m32-t.m01*t.m13*t.m32-t.m02*t.m11*t.m33-t.m03*t.m12*t.m31)*i,n.m03=(t.m01*t.m13*t.m22+t.m02*t.m11*t.m23+t.m03*t.m12*t.m21-t.m01*t.m12*t.m23-t.m02*t.m13*t.m21-t.m03*t.m11*t.m22)*i,n.m10=(t.m10*t.m23*t.m32+t.m12*t.m20*t.m33+t.m13*t.m22*t.m30-t.m10*t.m22*t.m33-t.m12*t.m23*t.m30-t.m13*t.m20*t.m32)*i,n.m11=(t.m00*t.m22*t.m33+t.m02*t.m23*t.m30+t.m03*t.m20*t.m32-t.m00*t.m23*t.m32-t.m02*t.m20*t.m33-t.m03*t.m22*t.m30)*i,n.m12=(t.m00*t.m13*t.m32+t.m02*t.m10*t.m33+t.m03*t.m12*t.m30-t.m00*t.m12*t.m33-t.m02*t.m13*t.m30-t.m03*t.m10*t.m32)*i,n.m13=(t.m00*t.m12*t.m23+t.m02*t.m13*t.m20+t.m03*t.m10*t.m22-t.m00*t.m13*t.m22-t.m02*t.m10*t.m23-t.m03*t.m12*t.m20)*i,n.m20=(t.m10*t.m21*t.m33+t.m11*t.m23*t.m30+t.m13*t.m20*t.m31-t.m10*t.m23*t.m31-t.m11*t.m20*t.m33-t.m13*t.m21*t.m30)*i,n.m21=(t.m00*t.m23*t.m31+t.m01*t.m20*t.m33+t.m03*t.m21*t.m30-t.m00*t.m21*t.m33-t.m01*t.m23*t.m30-t.m03*t.m20*t.m31)*i,n.m22=(t.m00*t.m11*t.m33+t.m01*t.m13*t.m30+t.m03*t.m10*t.m31-t.m00*t.m13*t.m31-t.m01*t.m10*t.m33-t.m03*t.m11*t.m30)*i,n.m23=(t.m00*t.m13*t.m21+t.m01*t.m10*t.m23+t.m03*t.m11*t.m20-t.m00*t.m11*t.m23-t.m01*t.m13*t.m20-t.m03*t.m10*t.m21)*i,n.m30=(t.m10*t.m22*t.m31+t.m11*t.m20*t.m32+t.m12*t.m21*t.m30-t.m10*t.m21*t.m32-t.m11*t.m22*t.m30-t.m12*t.m20*t.m31)*i,n.m31=(t.m00*t.m21*t.m32+t.m01*t.m22*t.m30+t.m02*t.m20*t.m31-t.m00*t.m22*t.m31-t.m01*t.m20*t.m32-t.m02*t.m21*t.m30)*i,n.m32=(t.m00*t.m12*t.m31+t.m01*t.m10*t.m32+t.m02*t.m11*t.m30-t.m00*t.m11*t.m32-t.m01*t.m12*t.m30-t.m02*t.m10*t.m31)*i,n.m33=(t.m00*t.m11*t.m22+t.m01*t.m12*t.m20+t.m02*t.m10*t.m21-t.m00*t.m12*t.m21-t.m01*t.m10*t.m22-t.m02*t.m11*t.m20)*i,n}toString(){return"[["+this.m00+" "+this.m01+" "+this.m02+" "+this.m03+"]\n ["+this.m10+" "+this.m11+" "+this.m12+" "+this.m13+"]\n ["+this.m20+" "+this.m21+" "+this.m22+" "+this.m23+"]\n ["+this.m30+" "+this.m31+" "+this.m32+" "+this.m33+"]]"}toInstanceArray(t,e){return new t(1===e?[this.m00]:4===e?[this.m00,this.m10,this.m01,this.m11]:9===e?[this.m00,this.m10,this.m20,this.m01,this.m11,this.m21,this.m02,this.m12,this.m22]:[this.m00,this.m10,this.m20,this.m30,this.m01,this.m11,this.m21,this.m31,this.m02,this.m12,this.m22,this.m32,this.m03,this.m13,this.m23,this.m33])}}class S3Vector{constructor(t,e,i,n){this.x=t,this.y=e,this.z=void 0===i?0:i,this.w=void 0===n?1:n}clone(){return new S3Vector(this.x,this.y,this.z,this.w)}negate(){return new S3Vector(-this.x,-this.y,-this.z,this.w)}cross(t){return new S3Vector(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x,1)}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}add(t){return new S3Vector(this.x+t.x,this.y+t.y,this.z+t.z,1)}sub(t){return new S3Vector(this.x-t.x,this.y-t.y,this.z-t.z,1)}mul(t){if(t instanceof S3Vector)return new S3Vector(this.x*t.x,this.y*t.y,this.z*t.z,1);if(t instanceof S3Matrix){const e=this,i=t;return new S3Vector(e.x*i.m00+e.y*i.m10+e.z*i.m20+e.w*i.m30,e.x*i.m01+e.y*i.m11+e.z*i.m21+e.w*i.m31,e.x*i.m02+e.y*i.m12+e.z*i.m22+e.w*i.m32,e.x*i.m03+e.y*i.m13+e.z*i.m23+e.w*i.m33)}if("number"==typeof t)return new S3Vector(this.x*t,this.y*t,this.z*t,1);throw"IllegalArgumentException"}setX(t){return new S3Vector(t,this.y,this.z,this.w)}setY(t){return new S3Vector(this.x,t,this.z,this.w)}setZ(t){return new S3Vector(this.x,this.y,t,this.w)}setW(t){return new S3Vector(this.x,this.y,this.z,t)}max(t){return new S3Vector(Math.max(this.x,t.x),Math.max(this.y,t.y),Math.max(this.z,t.z),Math.max(this.w,t.w))}min(t){return new S3Vector(Math.min(this.x,t.x),Math.min(this.y,t.y),Math.min(this.z,t.z),Math.min(this.w,t.w))}equals(t){return S3Math.equals(this.x,t.x)&&S3Math.equals(this.y,t.y)&&S3Math.equals(this.z,t.z)&&S3Math.equals(this.w,t.w)}mix(t,e){return new S3Vector(S3Math.mix(this.x,t.x,e),S3Math.mix(this.y,t.y,e),S3Math.mix(this.z,t.z,e),S3Math.mix(this.w,t.w,e))}norm(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}normFast(){return this.x*this.x+this.y*this.y+this.z*this.z}normalize(){let t=this.normFast();if(0===t)throw"divide error";return t=Math.sqrt(1/t),new S3Vector(this.x*t,this.y*t,this.z*t,1)}toString(t){return 1===t?"["+this.x+"]T":2===t?"["+this.x+","+this.y+"]T":3===t?"["+this.x+","+this.y+","+this.z+"]T":"["+this.x+","+this.y+","+this.z+","+this.w+"]T"}toHash(t){let e=321*parseFloat(this.x.toExponential(3).substring(0,5))&4294967295;return t>=2&&(e=12345*e+1e4*parseFloat(this.y.toExponential(4).substring(0,6))&4294967295),t>=3&&(e=12345*e+1e4*parseFloat(this.z.toExponential(4).substring(0,6))&4294967295),t>=4&&(e=12345*e+1e4*parseFloat(this.w.toExponential(4).substring(0,6))&4294967295),e}toInstanceArray(t,e){return new t(1===e?[this.x]:2===e?[this.x,this.y]:3===e?[this.x,this.y,this.z]:[this.x,this.y,this.z,this.w])}pushed(t,e){1===e?t.push(this.x):2===e?(t.push(this.x),t.push(this.y)):3===e?(t.push(this.x),t.push(this.y),t.push(this.z)):(t.push(this.x),t.push(this.y),t.push(this.z),t.push(this.w))}getDirection(t){return t.sub(this)}getDirectionNormalized(t){return t.sub(this).normalize()}getDistance(t){return this.getDirection(t).norm()}isNaN(){return isNaN(this.x)||isNaN(this.y)||isNaN(this.z)||isNaN(this.w)}isFinite(){return isFinite(this.x)&&isFinite(this.y)&&isFinite(this.z)&&isFinite(this.w)}isRealNumber(){return!this.isNaN()&&this.isFinite()}static getNormalVector(t,e,i,n,s,r){let o;for(;;){const h=t.getDirection(e),a=t.getDirection(i);try{o=h.cross(a).normalize()}catch(t){o=new S3Vector(.3333,.3333,.3333);break}if(null===n|null===s|null===r)break;const m=n.getDirection(s),c=n.getDirection(r);let l;try{l=1/m.cross(c).z;const t=new S3Vector,e=new S3Vector;return t.x=l*(c.y*h.x-m.y*a.x),t.y=l*(c.y*h.y-m.y*a.y),t.z=l*(c.y*h.z-m.y*a.z),e.x=l*(-c.x*h.x+m.x*a.x),e.y=l*(-c.x*h.y+m.x*a.y),e.z=l*(-c.x*h.z+m.x*a.z),{normal:o,tangent:t.normalize(),binormal:e.normalize()}}catch(t){break}}return{normal:o,tangent:null,binormal:null}}static isClockwise(t,e,i){const n=t.getDirection(e).setZ(0),s=t.getDirection(i).setZ(0),r=n.cross(s).z;return 0===r?null:r>0}}S3Vector.ZERO=new S3Vector(0,0,0);class S3Camera{constructor(t){this.sys=t,this.init()}dispose(){this.sys=null,this.fovY=0,this.eye=null,this.at=null,this.near=0,this.far=0}init(){this.fovY=45,this.eye=new S3Vector(0,0,0),this.at=new S3Vector(0,0,1),this.near=1,this.far=1e3}clone(){const t=new S3Camera(this.sys);return t.fovY=this.fovY,t.eye=this.eye,t.at=this.at,t.near=this.near,t.far=this.far,t}getVPSMatrix(t){const e=S3System.calcAspect(t.width,t.height);return{LookAt:this.sys.getMatrixLookAt(this.eye,this.at),aspect:e,PerspectiveFov:this.sys.getMatrixPerspectiveFov(this.fovY,e,this.near,this.far),Viewport:this.sys.getMatrixViewport(0,0,t.width,t.height)}}setDrawRange(t,e){this.near=t,this.far=e}setFovY(t){this.fovY=t}setEye(t){this.eye=t.clone()}setCenter(t){this.at=t.clone()}getDirection(){return this.eye.getDirectionNormalized(this.at)}getDistance(){return this.at.getDistance(this.eye)}setDistance(t){const e=this.at.getDirectionNormalized(this.eye);this.eye=this.at.add(e.mul(t))}getRotateY(){const t=this.at.getDirection(this.eye);return S3Math.degrees(Math.atan2(t.x,t.z))}setRotateY(t){const e=S3Math.radius(t),i=this.at.getDirection(this.eye).setY(0).norm(),n=Math.cos(e),s=Math.sin(e);this.eye=new S3Vector(this.at.x+i*s,this.eye.y,this.at.z+i*n)}addRotateY(t){this.setRotateY(this.getRotateY()+t)}getRotateX(){const t=this.at.getDirection(this.eye);return S3Math.degrees(Math.atan2(t.z,t.y))}setRotateX(t){const e=S3Math.radius(t),i=this.at.getDirection(this.eye).setX(0).norm(),n=Math.cos(e),s=Math.sin(e);this.eye=new S3Vector(this.eye.x,this.at.y+i*n,this.at.z+i*s)}addRotateX(t){this.setRotateX(this.getRotateX()+t)}translateAbsolute(t){this.eye=this.eye.add(t),this.at=this.at.add(t)}translateRelative(t){let e,i,n;const s=new S3Vector(0,1,0);n=this.eye.getDirectionNormalized(this.at),this.sys.dimensionmode===S3System.DIMENSION_MODE.RIGHT_HAND&&(n=n.negate()),e=s.cross(n).normalize(),i=n.cross(e),e=e.mul(t.x),i=i.mul(t.y),n=n.mul(t.z),this.translateAbsolute(e.add(i).add(n))}toString(){return"camera[\neye  :"+this.eye+",\nat   :"+this.at+",\nfovY :"+this.fovY+"]"}}class S3Light{constructor(){this.init()}init(){this.mode=S3Light.MODE.DIRECTIONAL_LIGHT,this.power=1,this.range=1e3,this.position=new S3Vector(0,0,0),this.direction=new S3Vector(0,0,-1),this.color=new S3Vector(1,1,1)}clone(t){t||(t=S3Light);const e=new t;return e.mode=this.mode,e.power=this.power,e.range=this.range,e.position=this.position,e.direction=this.direction,e.color=this.color,e}setMode(t){this.mode=t}setPower(t){this.power=t}setRange(t){this.range=t}setPosition(t){this.position=t}setDirection(t){this.direction=t}setColor(t){this.color=t}}S3Light.MODE={NONE:0,AMBIENT_LIGHT:1,DIRECTIONAL_LIGHT:2,POINT_LIGHT:3};class S3Material{constructor(t,e){this.sys=t,this.name="s3default",void 0!==e&&(this.name=e),this.color=new S3Vector(1,1,1,1),this.diffuse=.8,this.emission=new S3Vector(0,0,0),this.specular=new S3Vector(0,0,0),this.power=5,this.ambient=new S3Vector(.6,.6,.6),this.reflect=0,this.textureColor=this.sys.createTexture(),this.textureNormal=this.sys.createTexture()}dispose(){}setName(t){this.name=t}setColor(t){this.color=this.sys._toVector3(t)}setDiffuse(t){this.diffuse=this.sys._toValue(t)}setEmission(t){this.emission=this.sys._toVector3(t)}setSpecular(t){this.specular=this.sys._toVector3(t)}setPower(t){this.power=this.sys._toValue(t)}setAmbient(t){this.ambient=this.sys._toVector3(t)}setReflect(t){this.reflect=this.sys._toValue(t)}setTextureColor(t){null!==this.textureColor&&this.textureColor.dispose(),this.textureColor=this.sys.createTexture(),this.textureColor.setImage(t)}setTextureNormal(t){null!==this.textureNormal&&this.textureNormal.dispose(),this.textureNormal=this.sys.createTexture(),this.textureNormal.setImage(t)}}class S3Vertex{constructor(t){this.position=t}clone(t){return t||(t=S3Vertex),new t(this.position)}}class S3TriangleIndex{constructor(t,e,i,n,s,r){this._init(t,e,i,n,s,r)}_init(t,e,i,n,s,r){if(this.index=null,this.uv=null,this.materialIndex=null,!(n instanceof Array&&n.length>0))throw"IllegalArgumentException";this.index=[n[t],n[e],n[i]],void 0!==r&&r instanceof Array&&r.length>0&&r[0]instanceof S3Vector?this.uv=[r[t],r[e],r[i]]:this.uv=[null,null,null],s=(s=s||0)>=0?s:0,this.materialIndex=s}clone(t){return t||(t=S3TriangleIndex),new t(0,1,2,this.index,this.materialIndex,this.uv)}inverseTriangle(t){return t||(t=S3TriangleIndex),new t(2,1,0,this.index,this.materialIndex,this.uv)}}class S3Mesh{constructor(t){this.sys=t,this._init()}_init(){this.src={},this.src.vertex=[],this.src.triangleindex=[],this.src.material=[],this.is_complete=!1}isComplete(){return this.is_complete}clone(t){t||(t=S3Mesh);const e=new t(this.sys);return e.addVertex(this.getVertexArray()),e.addTriangleIndex(this.getTriangleIndexArray()),e.addMaterial(this.getMaterialArray()),e}setComplete(t){this.is_complete=t}setInverseTriangle(t){this.setComplete(!1),this.is_inverse=t}getVertexArray(){return this.src.vertex}getTriangleIndexArray(){return this.src.triangleindex}getMaterialArray(){return this.src.material}addVertex(t){this.setComplete(!1);const e=this.getVertexArray();if(void 0===t);else if(t instanceof S3Vertex)e[e.length]=t;else for(let i=0;i<t.length;i++)e[e.length]=t[i]}addTriangleIndex(t){this.setComplete(!1);const e=this.getTriangleIndexArray();if(void 0===t);else if(t instanceof S3TriangleIndex)e[e.length]=this.is_inverse?t.inverseTriangle():t;else for(let i=0;i<t.length;i++)e[e.length]=this.is_inverse?t[i].inverseTriangle():t[i]}addMaterial(t){this.setComplete(!1);const e=this.getMaterialArray();if(void 0===t);else if(t instanceof S3Material)e[e.length]=t;else for(let i=0;i<t.length;i++)e[e.length]=t[i]}}class S3Angles{constructor(t,e,i){this.setRotateZXY(t,e,i)}static _toPeriodicAngle(t){return t>S3Angles.PI?t-S3Angles.PI2*parseInt((t+S3Angles.PI)/S3Angles.PI2):t<-S3Angles.PI?t+S3Angles.PI2*parseInt((-t+S3Angles.PI)/S3Angles.PI2):t}clone(){return new S3Angles(this.roll,this.pitch,this.yaw)}setRotateZXY(t,e,i){this.roll=S3Angles._toPeriodicAngle(isNaN(t)?0:t),this.pitch=S3Angles._toPeriodicAngle(isNaN(e)?0:e),this.yaw=S3Angles._toPeriodicAngle(isNaN(i)?0:i)}addRotateX(t){return new S3Angles(this.roll,this.pitch+t,this.yaw)}addRotateY(t){return new S3Angles(this.roll,this.pitch,this.yaw+t)}addRotateZ(t){return new S3Angles(this.roll+t,this.pitch,this.yaw)}setRotateX(t){return new S3Angles(this.roll,t,this.yaw)}setRotateY(t){return new S3Angles(this.roll,this.pitch,t)}setRotateZ(t){return new S3Angles(t,this.pitch,this.yaw)}toString(){return"angles["+this.roll+","+this.pitch+","+this.yaw+"]"}}S3Angles.PI=180,S3Angles.PIOVER2=S3Angles.PI/2,S3Angles.PILOCK=S3Angles.PIOVER2-1e-4,S3Angles.PI2=2*S3Angles.PI;class S3Model{constructor(){this._init()}_init(){this.angles=new S3Angles,this.scale=new S3Vector(1,1,1),this.position=new S3Vector(0,0,0),this.mesh=new S3Mesh}setMesh(t){this.mesh=t}getMesh(){return this.mesh}setScale(t,e,i){1===arguments.length?"number"==typeof t?this.scale=new S3Vector(t,t,t):t instanceof S3Vector&&(this.scale=t):this.scale=new S3Vector(t,e,i)}getScale(){return this.scale}setPosition(t,e,i){1===arguments.length&&t instanceof S3Vector?this.position=t:this.position=new S3Vector(t,e,i)}getPosition(){return this.position}getAngle(){return this.angles}setAngle(t){this.angles=t}addRotateX(t){this.angles=this.angles.addRotateX(t)}addRotateY(t){this.angles=this.angles.addRotateY(t)}addRotateZ(t){this.angles=this.angles.addRotateZ(t)}setRotateX(t){this.angles=this.angles.setRotateX(t)}setRotateY(t){this.angles=this.angles.setRotateY(t)}setRotateZ(t){this.angles=this.angles.addRotateZ(t)}}class S3Scene{constructor(){this._init()}_init(){this.camera=new S3Camera,this.model=[],this.light=[]}empty(){this.model=[],this.light=[]}setCamera(t){this.camera=t.clone()}addModel(t){this.model[this.model.length]=t}addLight(t){this.light[this.light.length]=t}getCamera(){return this.camera}getModels(){return this.model}getLights(){return this.light}}class S3Texture{constructor(t,e){this.sys=t,this._init(),void 0!==e&&this.setImage(e)}_init(){this.url=null,this.image=null,this.is_loadimage=!1,this.is_dispose=!1}dispose(){this.is_dispose||(this.is_dispose=!0)}setImage(t){if(null!==t&&!this.is_dispose){if(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement){const e=t.width,i=t.height,n=function(t){const e=Math.log(t)/Math.log(2);return e-Math.floor(e)<1e-10?t:1<<Math.ceil(e)},s=n(e),r=n(i);if(e!==s||i!==r){const n=document.createElement("canvas");n.width=s,n.height=r,n.getContext("2d").drawImage(t,0,0,e,i,0,0,s,r),t=n}}if(t instanceof ImageData||t instanceof HTMLImageElement||t instanceof HTMLCanvasElement||t instanceof HTMLVideoElement)return null===this.url&&(this.url=this.sys._createID()),this.image=t,void(this.is_loadimage=!0);if("string"==typeof t||t instanceof String){this.url=t;const e=this;return void this.sys._download(this.url,function(t){e.setImage(t)})}console.log("not setImage"),console.log(t)}}}class S3System{constructor(){this._init()}_init(){this.setSystemMode(S3System.SYSTEM_MODE.OPEN_GL),this.setBackgroundColor(new S3Vector(1,1,1,1))}_createID(){void 0===this._CREATE_ID1&&(this._CREATE_ID1=0,this._CREATE_ID2=0,this._CREATE_ID3=0,this._CREATE_ID4=0);const t=this._CREATE_ID4.toString(16)+":"+this._CREATE_ID3.toString(16)+":"+this._CREATE_ID2.toString(16)+":"+this._CREATE_ID1.toString(16);if(4294967296===++this._CREATE_ID1&&(this._CREATE_ID1=0,4294967296===++this._CREATE_ID2&&(this._CREATE_ID2=0,4294967296===++this._CREATE_ID3&&(this._CREATE_ID3=0,4294967296===++this._CREATE_ID4))))throw this._CREATE_ID4=0,"createID";return t}_download(t,e){const i=t.split(".");let n=!1;if(i.length>1){const t=i[i.length-1].toLocaleString();n="gif"===t||"jpg"===t||"png"===t||"bmp"===t||"svg"===t||"jpeg"===t}if(n){const i=new Image;return i.onload=function(){e(i,"")},void(i.src=t)}const s=new XMLHttpRequest,r=function(){if(4===s.readyState){if(200!==s.status)return console.log("error download ["+t+"]"),null;e(s.responseText,"")}};s.onreadystatechange=r,s.open("GET",t,!0),s.send(null)}_toVector3(t){if(t instanceof S3Vector)return t;if(isNaN(t)){if(t instanceof Array)return new S3Vector(t[0],t[1],t[2]);throw"IllegalArgumentException"}return new S3Vector(t,t,t)}_toValue(t){if(isNaN(t))throw"IllegalArgumentException";return t}setBackgroundColor(t){this.backgroundColor=t}getBackgroundColor(){return this.backgroundColor}setSystemMode(t){this.systemmode=t,this.systemmode===S3System.SYSTEM_MODE.OPEN_GL?(this.depthmode=S3System.DEPTH_MODE.OPEN_GL,this.dimensionmode=S3System.DIMENSION_MODE.RIGHT_HAND,this.vectormode=S3System.VECTOR_MODE.VECTOR4x1,this.frontface=S3System.FRONT_FACE.COUNTER_CLOCKWISE,this.cullmode=S3System.CULL_MODE.BACK):(this.depthmode=S3System.DEPTH_MODE.DIRECT_X,this.dimensionmode=S3System.DIMENSION_MODE.LEFT_HAND,this.vectormode=S3System.VECTOR_MODE.VECTOR1x4,this.frontface=S3System.FRONT_FACE.CLOCKWISE,this.cullmode=S3System.CULL_MODE.BACK)}setDepthMode(t){this.depthmode=t}setDimensionMode(t){this.dimensionmode=t}setVectorMode(t){this.vectormode=t}setFrontMode(t){this.frontface=t}setCullMode(t){this.cullmode=t}setCanvas(t){const e=this,i=t.getContext("2d");this.canvas=t,this.context2d={context:i,drawLine:function(t,e){i.beginPath(),i.moveTo(t.x,t.y),i.lineTo(e.x,e.y),i.stroke()},drawLinePolygon:function(t,e,n){i.beginPath(),i.moveTo(t.x,t.y),i.lineTo(e.x,e.y),i.lineTo(n.x,n.y),i.closePath(),i.stroke()},setLineWidth:function(t){i.lineWidth=t},setLineColor:function(t){i.strokeStyle=t},clear:function(){const t=e.getBackgroundColor();i.clearRect(0,0,e.canvas.width,e.canvas.height),i.fillStyle="rgba("+255*t.x+","+255*t.y+","+255*t.z+","+t.w+")",i.fillRect(0,0,e.canvas.width,e.canvas.height)}}}testCull(t,e,i){if(this.cullmode===S3System.CULL_MODE.NONE)return!1;if(this.cullmode===S3System.CULL_MODE.FRONT_AND_BACK)return!0;const n=S3Vector.isClockwise(t,e,i);return null===n||(n?this.frontface===S3System.FRONT_FACE.CLOCKWISE?this.cullmode===S3System.CULL_MODE.BACK:this.cullmode===S3System.CULL_MODE.FRONT:this.frontface===S3System.FRONT_FACE.CLOCKWISE?this.cullmode!==S3System.CULL_MODE.BACK:this.cullmode!==S3System.CULL_MODE.FRONT)}getMatrixViewport(t,e,i,n,s,r){void 0===s&&(s=0),void 0===r&&(r=1);const o=new S3Matrix;return o.m00=i/2,o.m01=0,o.m02=0,o.m03=0,o.m10=0,o.m11=-n/2,o.m12=0,o.m13=0,o.m20=0,o.m21=0,o.m22=1,o.m23=1,o.m30=t+i/2,o.m31=e+n/2,o.m32=0,o.m33=1,this.depthmode===S3System.DEPTH_MODE.DIRECT_X?(o.m22=s-r,o.m32=s):this.depthmode===S3System.DEPTH_MODE.OPEN_GL&&(o.m22=(s-r)/2,o.m32=(s+r)/2),this.vectormode===S3System.VECTOR_MODE.VECTOR4x1?o.transposed():o}static calcFovY(t){return 2*Math.atan(1/t)}static calcAspect(t,e){return t/e}getMatrixPerspectiveFov(t,e,i,n){const s=S3Math.radius(t),r=1/Math.tan(s/2),o=r/e,h=new S3Matrix;h.m00=o,h.m01=0,h.m02=0,h.m03=0,h.m10=0,h.m11=r,h.m12=0,h.m13=0,h.m20=0,h.m21=0,h.m22=1,h.m23=1,h.m30=0,h.m31=0,h.m32=0,h.m33=0;const a=n-i;if(i>n)throw"Near > Far error";if(0===a)throw"divide error";return this.depthmode===S3System.DEPTH_MODE.DIRECT_X?(h.m22=n/a,h.m32=-n*i/a):this.depthmode===S3System.DEPTH_MODE.OPEN_GL&&(h.m22=(n+i)/a,h.m32=-2*n*i/a),this.dimensionmode===S3System.DIMENSION_MODE.RIGHT_HAND&&(h.m22=-h.m22,h.m23=-h.m23),this.vectormode===S3System.VECTOR_MODE.VECTOR4x1?h.transposed():h}getMatrixLookAt(t,e,i){void 0===i&&(i=new S3Vector(0,1,0));let n=t.getDirectionNormalized(e);this.dimensionmode===S3System.DIMENSION_MODE.RIGHT_HAND&&(n=n.negate());const s=i.cross(n).normalize(),r=n.cross(s),o=new S3Matrix;return o.m00=s.x,o.m01=r.x,o.m02=n.x,o.m03=0,o.m10=s.y,o.m11=r.y,o.m12=n.y,o.m13=0,o.m20=s.z,o.m21=r.z,o.m22=n.z,o.m23=0,o.m30=-s.dot(t),o.m31=-r.dot(t),o.m32=-n.dot(t),o.m33=1,this.vectormode===S3System.VECTOR_MODE.VECTOR4x1?o.transposed():o}getMatrixIdentity(){const t=new S3Matrix;return t.m00=1,t.m01=0,t.m02=0,t.m03=0,t.m10=0,t.m11=1,t.m12=0,t.m13=0,t.m20=0,t.m21=0,t.m22=1,t.m23=0,t.m30=0,t.m31=0,t.m32=0,t.m33=1,t}getMatrixTranslate(t,e,i){const n=new S3Matrix;return n.m00=1,n.m01=0,n.m02=0,n.m03=0,n.m10=0,n.m11=1,n.m12=0,n.m13=0,n.m20=0,n.m21=0,n.m22=1,n.m23=0,n.m30=t,n.m31=e,n.m32=i,n.m33=1,this.vectormode===S3System.VECTOR_MODE.VECTOR4x1?n.transposed():n}getMatrixScale(t,e,i){const n=new S3Matrix;return n.m00=t,n.m01=0,n.m02=0,n.m03=0,n.m10=0,n.m11=e,n.m12=0,n.m13=0,n.m20=0,n.m21=0,n.m22=i,n.m23=0,n.m30=0,n.m31=0,n.m32=0,n.m33=1,this.vectormode===S3System.VECTOR_MODE.VECTOR4x1?n.transposed():n}getMatrixRotateX(t){const e=S3Math.radius(t),i=Math.cos(e),n=Math.sin(e),s=new S3Matrix;return s.m00=1,s.m01=0,s.m02=0,s.m03=0,s.m10=0,s.m11=i,s.m12=n,s.m13=0,s.m20=0,s.m21=-n,s.m22=i,s.m23=0,s.m30=0,s.m31=0,s.m32=0,s.m33=1,this.vectormode===S3System.VECTOR_MODE.VECTOR4x1?s.transposed():s}getMatrixRotateY(t){const e=S3Math.radius(t),i=Math.cos(e),n=Math.sin(e),s=new S3Matrix;return s.m00=i,s.m01=0,s.m02=-n,s.m03=0,s.m10=0,s.m11=1,s.m12=0,s.m13=0,s.m20=n,s.m21=0,s.m22=i,s.m23=0,s.m30=0,s.m31=0,s.m32=0,s.m33=1,this.vectormode===S3System.VECTOR_MODE.VECTOR4x1?s.transposed():s}getMatrixRotateZ(t){const e=S3Math.radius(t),i=Math.cos(e),n=Math.sin(e),s=new S3Matrix;return s.m00=i,s.m01=n,s.m02=0,s.m03=0,s.m10=-n,s.m11=i,s.m12=0,s.m13=0,s.m20=0,s.m21=0,s.m22=1,s.m23=0,s.m30=0,s.m31=0,s.m32=0,s.m33=1,this.vectormode===S3System.VECTOR_MODE.VECTOR4x1?s.transposed():s}mulMatrix(t,e){if(e instanceof S3Matrix)return this.vectormode===S3System.VECTOR_MODE.VECTOR4x1?e.mul(t):t.mul(e);if(e instanceof S3Vector)return this.vectormode===S3System.VECTOR_MODE.VECTOR4x1?t.mul(e):e.mul(t);throw"IllegalArgumentException"}getMatrixRotateZXY(t,e,i){const n=this.getMatrixRotateZ(t),s=this.getMatrixRotateX(e),r=this.getMatrixRotateY(i);return this.mulMatrix(this.mulMatrix(n,s),r)}getMatrixWorldTransform(t){const e=this.getMatrixRotateZXY(t.angles.roll,t.angles.pitch,t.angles.yaw),i=this.getMatrixScale(t.scale.x,t.scale.y,t.scale.z),n=this.getMatrixTranslate(t.position.x,t.position.y,t.position.z);return this.mulMatrix(this.mulMatrix(i,e),n)}clear(){this.context2d.clear()}_calcVertexTransformation(t,e,i){const n=[];for(let s=0;s<t.length;s++){let r=t[s].position;const o=(r=this.mulMatrix(e,r)).w;r=r.mul(1/o),r=this.mulMatrix(i,r),n[s]=new S3Vertex(r)}return n}drawAxis(t){const e=t.getCamera().getVPSMatrix(this.canvas),i=[];i[0]=new S3Vector(0,0,0),i[1]=new S3Vector(10,0,0),i[2]=new S3Vector(0,10,0),i[3]=new S3Vector(0,0,10);const n=[],s=this.mulMatrix(e.LookAt,e.PerspectiveFov);for(let t=0;t<i.length;t++){let r=i[t];r=(r=this.mulMatrix(s,r)).mul(1/r.w),r=this.mulMatrix(e.Viewport,r),n[t]=r}this.context2d.setLineWidth(3),this.context2d.setLineColor("rgb(255, 0, 0)"),this.context2d.drawLine(n[0],n[1]),this.context2d.setLineColor("rgb(0, 255, 0)"),this.context2d.drawLine(n[0],n[2]),this.context2d.setLineColor("rgb(0, 0, 255)"),this.context2d.drawLine(n[0],n[3])}_drawPolygon(t,e){for(let i=0;i<e.length;i++){const n=e[i];this.testCull(t[n.index[0]].position,t[n.index[1]].position,t[n.index[2]].position)||this.context2d.drawLinePolygon(t[n.index[0]].position,t[n.index[1]].position,t[n.index[2]].position)}}drawScene(t){const e=t.getCamera().getVPSMatrix(this.canvas);this.context2d.setLineWidth(1),this.context2d.setLineColor("rgb(0, 0, 0)");const i=t.getModels();for(let t=0;t<i.length;t++){const n=i[t],s=n.getMesh();if(!1!==s.isComplete()){const t=this.getMatrixWorldTransform(n),i=this.mulMatrix(this.mulMatrix(t,e.LookAt),e.PerspectiveFov),r=this._calcVertexTransformation(s.src.vertex,i,e.Viewport);this._drawPolygon(r,s.src.triangleindex)}}}_disposeObject(){}createVertex(t){return new S3Vertex(t)}createTriangleIndex(t,e,i,n,s,r){return new S3TriangleIndex(t,e,i,n,s,r)}createTexture(t){return new S3Texture(this,t)}createScene(){return new S3Scene}createModel(){return new S3Model}createMesh(){return new S3Mesh(this)}createMaterial(t){return new S3Material(this,t)}createLight(){return new S3Light}createCamera(){return new S3Camera(this)}}S3System.SYSTEM_MODE={OPEN_GL:0,DIRECT_X:1},S3System.DEPTH_MODE={OPEN_GL:0,DIRECT_X:1},S3System.DIMENSION_MODE={RIGHT_HAND:0,LEFT_HAND:1},S3System.VECTOR_MODE={VECTOR4x1:0,VECTOR1x4:1},S3System.FRONT_FACE={COUNTER_CLOCKWISE:0,CLOCKWISE:1},S3System.CULL_MODE={NONE:0,FRONT:1,BACK:2,FRONT_AND_BACK:3};class S3GLShader{constructor(t,e){this._init(t,e)}_init(t,e){this.sys=t,this.code=null,this.shader=null,this.sharder_type=-1,this.is_error=!1;const i=this,n=function(t){i.code=t};-1===e.indexOf("\n")?this.sys._download(e,n):this.code=e}isError(){return this.is_error}getCode(){return this.code}getShader(){const t=this.sys.getGL();if(null===t||this.is_error||null===this.code)return null;if(null!==this.shader)return this.shader;let e=this.code,i=0;i=-1!==(e=(e=e.replace(/\/\/.*/g,"")).replace(/\/\*([^*]|\*[^\/])*\*\//g,"")).indexOf("gl_FragColor")?t.FRAGMENT_SHADER:t.VERTEX_SHADER;const n=this.sys.glfunc.createShader(i,e);return n.is_error?(this.is_error=!0,null):(this.shader=n.shader,this.sharder_type=i,this.shader)}getShaderType(){return-1!==this.sharder_type?this.sharder_type:null!==this.getShader()?this.sharder_type:null}dispose(){return null===this.sys.getGL()?null:null===this.shader||(this.sys.glfunc.deleteShader(this.shader),this.shader=null,this.sharder_type=-1,!0)}}class S3GLArray{constructor(t,e,i){if(t instanceof i.instance)this.data=t;else if(t instanceof S3Vector||t instanceof S3Matrix)this.data=t.toInstanceArray(i.instance,e);else if(t instanceof Array)this.data=new i.instance(t);else{if(isNaN(t))throw"IllegalArgumentException";this.data=new i.instance([t])}this.dimension=e,this.datatype=i;let n="";n=t instanceof S3Vector?"S3Vector":t instanceof S3Matrix?"S3Matrix":"Number",this.glsltype=S3GLArray.gltypetable[i.name][n][e]}}S3GLArray.datatype={Float32Array:{instance:Float32Array,name:"Float32Array"},Int32Array:{instance:Int32Array,name:"Int32Array"}},S3GLArray.gltypetable={Float32Array:{Number:{1:"float",2:"vec2",3:"vec3",4:"vec4"},S3Vector:{2:"vec2",3:"vec3",4:"vec4"},S3Matrix:{4:"mat2",9:"mat3",16:"mat4"}},Int32Array:{Number:{1:"int",2:"ivec2",3:"ivec3",4:"ivec4"},S3Vector:{2:"ivec2",3:"ivec3",4:"ivec4"}}};class S3GLProgram{constructor(t,e){this._init(t,e)}_init(t,e){this.id=e,this.sys=t,this.vertex=null,this.fragment=null,this.isDLVertex=!1,this.isDLFragment=!1,this.program=null,this.is_linked=!1,this.is_error=!1,this.enable_vertex_number={};const i={};i.attribute={},i.uniform={},i.modifiers=[],i.datatype=[],this.variable=i;const n=this;this.activeTextureId=0;const s={uniform1iv:function(e,i){t.getGL()&&t.getGL().uniform1iv(e,i)},uniform2iv:function(e,i){t.getGL()&&t.getGL().uniform2iv(e,i)},uniform3iv:function(e,i){t.getGL()&&t.getGL().uniform3iv(e,i)},uniform4iv:function(e,i){t.getGL()&&t.getGL().uniform4iv(e,i)},uniform1fv:function(e,i){t.getGL()&&t.getGL().uniform1fv(e,i)},uniform2fv:function(e,i){t.getGL()&&t.getGL().uniform2fv(e,i)},uniform3fv:function(e,i){t.getGL()&&t.getGL().uniform3fv(e,i)},uniform4fv:function(e,i){t.getGL()&&t.getGL().uniform4fv(e,i)},uniformMatrix2fv:function(e,i){t.getGL()&&t.getGL().uniformMatrix2fv(e,!1,i)},uniformMatrix3fv:function(e,i){t.getGL()&&t.getGL().uniformMatrix3fv(e,!1,i)},uniformMatrix4fv:function(e,i){t.getGL()&&t.getGL().uniformMatrix4fv(e,!1,i)},uniformSampler2D:function(e,i){const s=t.getGL();s&&(s.activeTexture(s.TEXTURE0+n.activeTextureId),s.bindTexture(s.TEXTURE_2D,i),s.uniform1i(e,n.activeTextureId),n.activeTextureId++)}},r={int:{glsltype:"int",instance:Int32Array,size:1,btype:"INT",bind:s.uniform1iv},float:{glsltype:"float",instance:Float32Array,size:1,btype:"FLOAT",bind:s.uniform1fv},bool:{glsltype:"bool",instance:Int32Array,size:1,btype:"INT",bind:s.uniform1iv},mat2:{glsltype:"mat2",instance:Float32Array,size:4,btype:"FLOAT",bind:s.uniformMatrix2fv},mat3:{glsltype:"mat3",instance:Float32Array,size:9,btype:"FLOAT",bind:s.uniformMatrix3fv},mat4:{glsltype:"mat4",instance:Float32Array,size:16,btype:"FLOAT",bind:s.uniformMatrix4fv},vec2:{glsltype:"vec2",instance:Float32Array,size:2,btype:"FLOAT",bind:s.uniform2fv},vec3:{glsltype:"vec3",instance:Float32Array,size:3,btype:"FLOAT",bind:s.uniform3fv},vec4:{glsltype:"vec4",instance:Float32Array,size:4,btype:"FLOAT",bind:s.uniform4fv},ivec2:{glsltype:"ivec2",instance:Int32Array,size:2,btype:"INT",bind:s.uniform2iv},ivec3:{glsltype:"ivec3",instance:Int32Array,size:3,btype:"INT",bind:s.uniform3iv},ivec4:{glsltype:"ivec4",instance:Int32Array,size:4,btype:"INT",bind:s.uniform4iv},bvec2:{glsltype:"bvec2",instance:Int32Array,size:2,btype:"INT",bind:s.uniform2iv},bvec3:{glsltype:"bvec3",instance:Int32Array,size:3,btype:"INT",bind:s.uniform3iv},bvec4:{glsltype:"bvec4",instance:Int32Array,size:4,btype:"INT",bind:s.uniform4iv},sampler2D:{glsltype:"sampler2D",instance:Image,size:1,btype:"TEXTURE",bind:s.uniformSampler2D},samplerCube:{glsltype:"samplerCube",instance:Image,size:1,btype:"TEXTURE",bind:null}};this.analysisShader=function(t,e){const i=(t=(t=t.replace(/\/\/.*/g,"")).replace(/\/\*([^*]|\*[^\/])*\*\//g,"")).split("\n");for(let t=0;t<i.length;t++){const n=i[t].match(/(attribute|uniform)\s+(\w+)\s+(\w+)\s*(\[\s*\w+\s*\])?;/);if(null!==n){const t=n[1],i=n[2],s=n[3],o=n[4],h=void 0!==o,a=r[i];e[s]={};for(const t in a)e[s][t]=a[t];e[s].name=s,e[s].modifiers=t,e[s].is_array=h,e[s].location=[]}}}}resetActiveTextureId(){this.activeTextureId=0}isLinked(){return this.is_linked}dispose(){return null!==this.sys.getGL()&&(this.is_linked&&(this.disuseProgram(),this.sys.glfunc.deleteProgram(this.program,this.vertex.getShader(),this.fragment.getShader()),this.program=null,this.is_linked=!1),null!==this.vertex&&(this.vertex.dispose(),this.vertex=null),null!==this.fragment&&(this.fragment.dispose(),this.fragment=null),this._init(this.sys,this.id),!0)}setVertexShader(t){return!this.isLinked()&&(null!==this.vertex&&(this.vertex.dispose(),this.vertex=null),this.vertex=new S3GLShader(this.sys,t),this.is_error=!1,!0)}setFragmentShader(t){return!this.isLinked()&&(null!==this.fragment&&(this.fragment.dispose(),this.fragment=null),this.fragment=new S3GLShader(this.sys,t),this.is_error=!1,!0)}useProgram(){if(!this.isLinked())return!1;const t=this.getProgram();return t&&this.sys.getGL()&&this.sys.getGL().useProgram(t),!0}disuseProgram(){if(!this.isLinked())return!1;const t=this.sys.getGL();if(t){for(const e in this.enable_vertex_number)t.disableVertexAttribArray(e);this.enable_vertex_number={}}return!0}getProgram(){const t=this.sys.getGL();if(null===t||this.is_error)return null;if(this.isDLVertex||this.isDLFragment)return null;if(this.isLinked())return this.program;if(null===this.vertex)return console.log("do not set VERTEX_SHADER"),this.is_error=!0,null;if(null===this.fragment)return console.log("do not set FRAGMENT_SHADER"),this.is_error=!0,null;const e=this.vertex.isError(),i=this.fragment.isError();if(e||i)return console.log("shader compile error"),this.is_error=!0,null;const n=this.vertex.getShader(),s=this.fragment.getShader();if(null===n||null===s)return null;if(this.vertex.getShaderType()!==t.VERTEX_SHADER)return console.log("VERTEX_SHADER is not VERTEX_SHADER"),this.is_error=!0,null;if(this.fragment.getShaderType()!==t.FRAGMENT_SHADER)return console.log("FRAGMENT_SHADER is not FRAGMENT_SHADER"),this.is_error=!0,null;const r=this.sys.glfunc.createProgram(n,s);return r.is_error?(this.is_error=!0,null):(this.is_linked=!0,this.program=r.program,this.analysisShader(this.vertex.getCode(),this.variable),this.analysisShader(this.fragment.getCode(),this.variable),this.program)}bindData(t,e){if(!this.isLinked())return!1;const i=this.sys.getGL(),n=this.getProgram(),s=this.variable[t];if(void 0===s)return!1;if(0===s.location.length)if("attribute"===s.modifiers)s.location[0]=i.getAttribLocation(n,t);else if(s.is_array)for(let r=0;r<e.length;r++)s.location[r]=i.getUniformLocation(n,t+"["+r+"]");else s.location[0]=i.getUniformLocation(n,t);if(-1===s.location[0])return!1;const r=function(t){if(t instanceof WebGLBuffer&&"attribute"===s.modifiers)return t;if(t instanceof WebGLTexture&&"sampler2D"===s.glsltype)return t;if(t instanceof s.instance)return t;if(t instanceof S3GLArray&&s.glsltype===t.glsltype)return t.data;if(t instanceof S3Matrix&&("mat2"===s.glsltype||"mat3"===s.glsltype||"mat4"===s.glsltype))return t.toInstanceArray(s.instance,s.size);if(t instanceof S3Vector&&("vec2"===s.glsltype||"vec3"===s.glsltype||"vec4"===s.glsltype||"ivec2"===s.glsltype||"ivec3"===s.glsltype||"ivec4"===s.glsltype||"bvec2"===s.glsltype||"bvec3"===s.glsltype||"bvec4"===s.glsltype))return t.toInstanceArray(s.instance,s.size);if(("number"==typeof t||t instanceof Number)&&("int"===s.glsltype||"float"===s.glsltype||"bool"===s.glsltype))return new s.instance([t]);throw console.log(t),"not toArraydata"};if(s.is_array)for(let t=0;t<e.length;t++)-1!==s.location[t]&&null!==e[t]&&(e[t]=r(e[t]));else e=r(e);if("attribute"===s.modifiers)i.bindBuffer(i.ARRAY_BUFFER,e),this.enable_vertex_number[s.location[0]]||(i.enableVertexAttribArray(s.location[0]),this.enable_vertex_number[s.location[0]]=!0),i.vertexAttribPointer(s.location[0],s.size,"FLOAT"===s.btype?i.FLOAT:i.SHORT,!1,0,0);else if(s.is_array)for(let t=0;t<e.length;t++)-1!==s.location[t]&&null!==e[t]&&s.bind(s.location[t],e[t]);else s.bind(s.location[0],e);return!0}bindMesh(t){if(!this.isLinked())return 0;const e=this.sys.getGL();if(null===e)return 0;const i=t.getGLData();if(null===i)return 0;e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i.ibo.data);const n=i.ibo.array_length;for(const t in this.variable)"uniform"!==this.variable[t].modifiers&&void 0!==i.vbo[t]&&this.bindData(t,i.vbo[t].data);return n}}class S3GLLight extends S3Light{constructor(){super()}clone(){return super.clone(S3GLLight)}getGLHash(){return""+this.mode+this.power+this.range+this.position.toString(3)+this.direction.toString(3)+this.color.toString(3)}getGLData(){const t=this.color.mul(this.power);let e=new S3Vector;return this.mode===S3Light.MODE.DIRECTIONAL_LIGHT?e=this.direction:this.mode===S3Light.MODE.POINT_LIGHT&&(e=this.position),{lightsData1:new S3GLArray([this.mode,this.range,e.x,e.y],4,S3GLArray.datatype.Float32Array),lightsData2:new S3GLArray([e.z,t.x,t.y,t.z],4,S3GLArray.datatype.Float32Array)}}}class S3GLMaterial extends S3Material{constructor(t,e){super(t,e)}getGLHash(){return this.name}getGLData(){let t=this.textureColor.getGLData(),e=this.textureNormal.getGLData();const i=[null===t?0:1,null===e?0:1];return t=null===t?this.sys._getDummyTexture():t,e=null===e?this.sys._getDummyTexture():e,{materialsColorAndDiffuse:new S3GLArray([this.color.x,this.color.y,this.color.z,this.diffuse],4,S3GLArray.datatype.Float32Array),materialsSpecularAndPower:new S3GLArray([this.specular.x,this.specular.y,this.specular.z,this.power],4,S3GLArray.datatype.Float32Array),materialsEmission:new S3GLArray(this.emission,3,S3GLArray.datatype.Float32Array),materialsAmbientAndReflect:new S3GLArray([this.ambient.x,this.ambient.y,this.ambient.z,this.reflect],4,S3GLArray.datatype.Float32Array),materialsTextureExist:new S3GLArray(i,2,S3GLArray.datatype.Float32Array),materialsTextureColor:t,materialsTextureNormal:e}}}class S3GLTexture extends S3Texture{constructor(t,e){super(t,e),this.gldata=null}_init(){super._init(),this.gldata=null}dispose(){this.is_dispose||(this.is_dispose=!0,null!==this.gldata&&(this.sys._disposeObject(this),this.gldata=null))}getGLData(){return this.is_dispose?null:null!==this.gldata?this.gldata:this.is_loadimage?(this.gldata=this.sys.glfunc.createTexture(this.url,this.image),this.gldata):null}}class S3GLMesh extends S3Mesh{constructor(t){super(t)}_init(){super._init(),this.gldata={},this.is_compile_gl=!1}clone(){return super.clone(S3GLMesh)}isCompileGL(){return this.is_compile_gl}setCompileGL(t){this.is_compile_gl=t}createTriangleIndexData(){const t=this.getVertexArray(),e=this.getTriangleIndexArray(),i=[],n={normal:null,tangent:null,binormal:null};for(let s=0;s<e.length;s++){const r=e[s],o=r.index,h=r.uv;i[s]=r.createGLTriangleIndexData();const a=i[s];let m=null;m=this.sys.dimensionmode===S3System.DIMENSION_MODE.RIGHT_HAND?S3Vector.getNormalVector(t[o[0]].position,t[o[1]].position,t[o[2]].position,h[0],h[1],h[2]):S3Vector.getNormalVector(t[o[2]].position,t[o[1]].position,t[o[0]].position,h[2],h[1],h[0]);for(const t in n)a.face[t]=m[t]}const s=[],r=[];for(let t=0;t<e.length;t++){const o=e[t],h=o.materialIndex,a=i[t];void 0===s[h]&&(s[h]=[],r[h]=[]);const m=s[h],c=r[h];for(let t=0;t<3;t++){const e=o.index[t];void 0===m[e]&&(m[e]={normal:new S3Vector(0,0,0),tangent:new S3Vector(0,0,0),binormal:new S3Vector(0,0,0)},c[e]={normal:[],tangent:[],binormal:[]});const i=m[e],s=c[e];for(const t in n)if(null!==a.face[t]){const e=a.face[t].toHash(3);if(s[t][e])continue;i[t]=i[t].add(a.face[t]),s[t][e]=!0}}}for(const t in s){const e=s[t];for(const t in e){const i=e[t];for(const t in n)i[t].normFast()>1e-6&&(i[t]=i[t].normalize())}}const o={};o.normal=Math.cos(50/360*(2*Math.PI)),o.tangent=Math.cos(50/360*(2*Math.PI)),o.binormal=Math.cos(50/360*(2*Math.PI));for(let t=0;t<e.length;t++){const r=e[t],h=r.materialIndex,a=i[t],m=s[h];for(let t=0;t<3;t++){const e=r.index[t],i=m[e];for(const e in n){let n;if(a.face[e]){const t=a.face[e].dot(i[e]);n=t<o[e]?a.face:i}else n=i;a.vertex[e][t]=n[e]}}}return i}_getGLArrayData(){const t=this.getVertexArray(),e=this.createTriangleIndexData(),i=[];let n=0;const s=[],r={};for(let o=0;o<e.length;o++){const h=e[o],a=[];for(let e=0;e<3;e++){const s=h.getGLHash(e,t),o=i[s];if(a[e]=void 0!==o?o:n,void 0===o){const o=h.getGLData(e,t);i[s]=n;for(const t in o)void 0===r[t]&&(r[t]=[]),r[t].push(o[t]);n++}}s[o]=new Int16Array(a)}let o=0;const h={};h.array_length=3*e.length,h.array=new Int16Array(h.array_length),o=0;for(let t=0;t<e.length;t++)for(let e=0;e<3;e++)h.array[o++]=s[t][e];const a={};for(const t in r){const e=r[t],i=e[0].dimension,s={};s.name=t,s.dimension=e[0].dimension,s.datatype=e[0].datatype,s.array_length=i*n,s.array=new s.datatype.instance(s.array_length),o=0;for(let t=0;t<n;t++)for(let n=0;n<i;n++)s.array[o++]=e[t].data[n];a[t]=s}const m={};return m.ibo=h,m.vbo=a,m}disposeGLData(){if(this.isCompileGL()){const t=this.getGLData();if(null!==t){if(void 0!==t.ibo&&(void 0!==t.ibo.data&&this.sys.glfunc.deleteBuffer(t.ibo.data),delete t.ibo),void 0!==t.vbo){for(const e in t.vbo)void 0!==t.vbo[e].data&&this.sys.glfunc.deleteBuffer(t.vbo[e].data);delete t.vbo}{const t=this.getMaterialArray();for(let e=0;e<t.length;e++){const i=t[e];for(const t in i){const e=i[t];e instanceof S3GLTexture&&e.dispose()}}}}delete this.gldata,this.gldata={},this.setCompileGL(!1)}}getGLData(){if(this.isCompileGL())return this.gldata;if(!1===this.isComplete())return null;if(!this.sys.isSetGL())return null;const t=this._getGLArrayData();t.ibo.data=this.sys.glfunc.createBufferIBO(t.ibo.array);for(const e in t.vbo)t.vbo[e].data=this.sys.glfunc.createBufferVBO(t.vbo[e].array);return this.gldata=t,this.setCompileGL(!0),this.gldata}}class S3GLModel extends S3Model{constructor(){super()}getUniforms(){const t={};{const e=this.getMesh().getMaterialArray(),i=Math.min(e.length,4);for(let n=0;n<i;n++){const i=e[n].getGLData();for(const e in i)t[e]||(t[e]=[]),t[e].push(i[e])}}const e=[];return e.uniforms=t,e}}class S3GLScene extends S3Scene{constructor(){super()}getUniforms(){const t={};t.eyeWorldDirection=this.getCamera().getDirection();{const e=this.getLights(),i=Math.min(e.length,4);t.lightsLength=new S3GLArray(i,1,S3GLArray.datatype.Int32Array);for(let n=0;n<i;n++){const i=e[n].getGLData();for(const e in i)t[e]||(t[e]=[]),t[e].push(i[e])}}const e=[];return e.uniforms=t,e}}class S3GLTriangleIndexData{constructor(t){this.index=t.index,this.materialIndex=t.materialIndex,this.uv=t.uv,this._isEnabledTexture=null!==t.uv[0],this.face={},this.vertex={},this.face.normal=null,this.face.tangent=null,this.face.binormal=null,this.vertex.normal=[null,null,null],this.vertex.tangent=[null,null,null],this.vertex.binormal=[null,null,null]}getGLHash(t,e){const i=this._isEnabledTexture?this.uv[t].toString(2)+this.face.binormal.toString(2)+this.face.tangent.toString(2):"";return e[this.index[t]].getGLHash()+this.materialIndex+i+this.vertex.normal[t].toString(3)}getGLData(t,e){const i={},n=e[this.index[t]].getGLData();for(const t in n)i[t]=n[t];const s=this._isEnabledTexture?this.uv[t]:new S3Vector(0,0);return i.vertexTextureCoord=new S3GLArray(s,2,S3GLArray.datatype.Float32Array),i.vertexMaterialFloat=new S3GLArray(this.materialIndex,1,S3GLArray.datatype.Float32Array),i.vertexNormal=new S3GLArray(this.vertex.normal[t],3,S3GLArray.datatype.Float32Array),i.vertexBinormal=new S3GLArray(this.vertex.binormal[t],3,S3GLArray.datatype.Float32Array),i.vertexTangent=new S3GLArray(this.vertex.tangent[t],3,S3GLArray.datatype.Float32Array),i}}class S3GLTriangleIndex extends S3TriangleIndex{constructor(t,e,i,n,s,r){super(t,e,i,n,s,r)}clone(){return super.clone(S3GLTriangleIndex)}inverseTriangle(){return super.inverseTriangle(S3GLTriangleIndex)}createGLTriangleIndexData(){return new S3GLTriangleIndexData(this)}}class S3GLVertex extends S3Vertex{constructor(t){super(t)}clone(){return super.clone(S3GLVertex)}getGLHash(){return this.position.toString(3)}getGLData(){return{vertexPosition:new S3GLArray(this.position,3,S3GLArray.datatype.Float32Array)}}}class S3GLSystem extends S3System{constructor(){super(),this.program=null,this.gl=null,this.is_set=!1,this.program_list=[],this.program_listId=0;const t=this,e={};this.glfunc={createBufferVBO:function(e){const i=t.getGL();if(null===i)return null;const n=i.createBuffer();return i.bindBuffer(i.ARRAY_BUFFER,n),i.bufferData(i.ARRAY_BUFFER,e,i.STATIC_DRAW),i.bindBuffer(i.ARRAY_BUFFER,null),n},createBufferIBO:function(e){const i=t.getGL();if(null===i)return null;const n=i.createBuffer();return i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,n),i.bufferData(i.ELEMENT_ARRAY_BUFFER,e,i.STATIC_DRAW),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,null),n},deleteBuffer:function(e){const i=t.getGL();null!==i&&i.deleteBuffer(e)},createTexture:function(i,n){if(!(n instanceof ImageData||n instanceof HTMLImageElement||n instanceof HTMLCanvasElement||n instanceof HTMLVideoElement))throw"createBufferTexture";const s=t.getGL();if(null===s)return null;let r=null;if(!e[i]){r=s.createTexture(),s.bindTexture(s.TEXTURE_2D,r),s.texImage2D(s.TEXTURE_2D,0,s.RGBA,s.RGBA,s.UNSIGNED_BYTE,n),s.generateMipmap(s.TEXTURE_2D),s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,null);const t={};t.texture=r,t.count=0,e[i]=t}return r=e[i].texture,e[i].count++,r},deleteTexture:function(i){const n=t.getGL();null!==n&&e[i]&&0===--e[i].count&&(n.deleteBuffer(e[i].texture),delete e[i])},createProgram:function(e,i){const n=t.getGL();if(null===n)return null;let s=n.createProgram(),r=!1;return n.attachShader(s,e),n.attachShader(s,i),n.linkProgram(s),n.getProgramParameter(s,n.LINK_STATUS)||(console.log("link error "+n.getProgramInfoLog(s)),n.detachShader(s,e),n.detachShader(s,i),n.deleteProgram(s),s=null,r=!0),{program:s,is_error:r}},deleteProgram:function(e,i,n){const s=t.getGL();if(null===s)return null;s.detachShader(e,i),s.detachShader(e,n),s.deleteProgram(e)},createShader:function(e,i){const n=t.getGL();if(null===n)return null;let s=n.createShader(e),r=!1;return n.shaderSource(s,i),n.compileShader(s),n.getShaderParameter(s,n.COMPILE_STATUS)||(console.log("compile error "+n.getShaderInfoLog(s)),n.deleteShader(s),s=null,r=!0),{shader:s,is_error:r}},deleteShader:function(e){const i=t.getGL();if(null===i)return null;i.deleteShader(e)}}}getGL(){return this.gl}isSetGL(){return null!==this.gl}setCanvas(t){const e=t.getContext("webgl")||t.getContext("experimental-webgl");this.canvas=t,this.gl=e}createProgram(){const t=new S3GLProgram(this,this.program_listId);return this.program_list[this.program_listId]=t,this.program_listId++,t}disposeProgram(){for(const t in this.program_list)this.program_list[t].dispose(),delete this.program_list[t]}setProgram(t){if(null===t)return!1;if(!(t instanceof S3GLProgram))throw"not S3GLProgram";return null===this.program&&(this.program=t),null!==t.getProgram()&&(!(this.program!==t||!this.is_set)||(null!==this.program&&this.program.disuseProgram(),this.program=t,this.program.useProgram(),void(this.is_set=!0)))}clear(){if(null===this.gl)return!1;const t=this.getBackgroundColor();return this.gl.clearColor(t.x,t.y,t.z,t.w),this.gl.clearDepth(1),this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),!0}drawElements(t){this.is_set&&(this.gl.drawElements(this.gl.TRIANGLES,t,this.gl.UNSIGNED_SHORT,0),this.gl.flush())}deleteBuffer(t){if(null===this.gl)return null;this.gl.deleteBuffer(t)}_getDummyTexture(){if(void 0===this._textureDummyData){const t=document.createElement("canvas");t.width=1,t.height=1;const e=t.getContext("2d"),i=e.getImageData(0,0,t.width,t.height);this._textureDummyId=this._createID(),this._textureDummyData=this.glfunc.createTexture(this._textureDummyId,i)}return this._textureDummyData}_setDepthMode(){if(null===this.gl)return null;const t=this.gl;t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL)}_setCullMode(){if(null===this.gl)return null;const t=this.gl;if(this.cullmode===S3System.CULL_MODE.NONE)return void t.disable(t.CULL_FACE);t.enable(t.CULL_FACE),this.frontface===S3System.FRONT_FACE.CLOCKWISE?t.frontFace(t.CW):t.frontFace(t.CCW),this.cullmode===S3System.CULL_MODE.FRONT_AND_BACK?t.cullFace(t.FRONT_AND_BACK):this.cullmode===S3System.CULL_MODE.BACK?t.cullFace(t.BACK):this.cullmode===S3System.CULL_MODE.FRONT&&t.cullFace(t.FRONT)}_bindStart(){this.program.resetActiveTextureId()}_bindEnd(){}_bind(t,e){if(this.is_set){const i=this.program;let n=0;if(2===arguments.length&&("string"==typeof t||t instanceof String))i.bindData(t,e);else if(1===arguments.length&&t instanceof S3GLModel){const e=t.getMesh();e instanceof S3GLMesh&&(n=i.bindMesh(e))}else if(1===arguments.length&&t.uniforms){const e=t.uniforms;for(const t in e)i.bindData(t,e[t])}return n}}drawScene(t){if(this.setProgram(this.program),this.is_set){this._setDepthMode(),this._setCullMode(),this._bindStart(),this._bind(t.getUniforms());const e=t.getCamera().getVPSMatrix(this.canvas),i=t.getModels();for(let t=0;t<i.length;t++){const n=i[t],s=n.getMesh();if(!1!==s.isComplete()){this._bind(n.getUniforms());const t=this.getMatrixWorldTransform(n),i=this.mulMatrix(t,e.LookAt),s=this.mulMatrix(i,e.PerspectiveFov);this._bind("matrixWorldToLocal4",t.inverse4()),this._bind("matrixLocalToWorld4",t),this._bind("matrixLocalToWorld3",t),this._bind("matrixLocalToPerspective4",s);const r=this._bind(n);r&&this.drawElements(r)}}this._bindEnd()}}_disposeObject(t){t instanceof S3GLTexture&&this.glfunc.deleteTexture(this.url)}createVertex(t){return new S3GLVertex(t)}createTriangleIndex(t,e,i,n,s,r){return new S3GLTriangleIndex(t,e,i,n,s,r)}createTexture(t){return new S3GLTexture(this,t)}createScene(){return new S3GLScene}createModel(){return new S3GLModel}createMesh(){return new S3GLMesh(this)}createMaterial(t){return new S3GLMaterial(this,t)}createLight(){return new S3GLLight}createCamera(){return new S3Camera(this)}}const DefaultMaterial={name:"s3default",color:new S3Vector(1,1,1,1),diffuse:.8,emission:new S3Vector(0,0,0),specular:new S3Vector(0,0,0),power:5,ambient:new S3Vector(.6,.6,.6),reflect:0,textureColor:null,textureNormal:null},S3MeshLoaderJSON={name:"JSON",input:function(t,e,i){let n;n="string"==typeof i||i instanceof String?JSON.parse(i):i;let s=0;for(const i in n.Indexes){e.addMaterial(t.createMaterial(i));const r=n.Indexes[i];for(let i=0;i<r.length;i++){const n=r[i];for(let i=0;i<n.length-2;i++){const r=i%2==0?t.createTriangleIndex(i,i+1,i+2,n,s):t.createTriangleIndex(i-1,i+1,i+2,n,s);e.addTriangleIndex(r)}}s++}for(let i=0;i<n.Vertices.length;i++){const s=new S3Vector(n.Vertices[i][0],n.Vertices[i][1],n.Vertices[i][2]),r=t.createVertex(s);e.addVertex(r)}return!0},output:function(t){const e=t.getVertexArray(),i=t.getTriangleIndexArray(),n=t.getMaterialArray(),s=[],r=0!==n.length?n.length:1,o=DefaultMaterial;for(let t=0;t<r;t++)s[t]={material:n[t]?n[t]:o,list:[]};for(let t=0;t<i.length;t++){const e=i[t];s[e.materialIndex].list.push(e.index)}const h=[];h.push("{"),h.push("\tIndexes:{");for(let t=0;t<s.length;t++){const e=s[t];h.push("\t\t"+e.material.name+":[");for(let t=0;t<e.list.length;t++){const i=e.list[t];h.push("\t\t\t["+i[0]+" "+i[1]+" "+i[2]+"]"+(t===e.list.length-1?"":","))}h.push("\t\t]"+(t===s.length-1?"":","))}h.push("\t},"),h.push("\tVertices:[");for(let t=0;t<e.length;t++){const i=e[t].position;h.push("\t\t["+i.x+" "+i.y+" "+i.z+"]"+(i===e.length-1?"":","))}return h.push("\t]"),h.push("}"),h.join("\n")}};class File{constructor(t){this.pathname=t.replace(/\\/g,"/")}getAbsolutePath(){if(/$http/.test(this.pathname))return this.pathname;let t=window.location.toString();/\/$/.test(t)||(t=t.match(/.*\//)[0]);const e=this.pathname.split("/");for(let i=0;i<e.length;i++)""!==e[i]&&"."!==e[i]&&(".."!==e[i]?(t+=e[i],i!==e.length-1&&(t+="/")):t=t.substring(0,t.length-1).match(/.*\//)[0]);return t}getParent(){const t=this.getAbsolutePath().match(/.*\//)[0];return t.substring(0,t.length-1)}}const S3MeshLoaderMQO={name:"MQO",input:function(t,e,i,n){let s="./";n&&(s=new File(n).getParent()+"/");const r=i.split("\n"),o=[];let h="none";const a=function(t){const e=t.split(" "),i=[];for(let t=0;t<e.length;t++)i[t]=parseFloat(e[t]);return i},m=function(t,e){const i=t.split(" "+e+"(");return 1===i.length?[]:i[1].split(")")[0]},c=function(t,e){const i=m(t,e);return 0===i.length?[]:a(i)},l=function(t,e){const i=m(t,e);if(0===i.length)return null;const n=i.split('"');return 3!==n.length?null:n[1]};for(let i=0;i<r.length;i++){const n=r[i].replace(/^\s+|\s+$/g,""),m=n.split(" ")[0];if(-1===n.indexOf("{"))if(-1===n.indexOf("}")){if("Thumbnail"!==h&&"none"!==h)if("Material"===h){const i=m.replace(/"/g,""),r=t.createMaterial();r.setName(i);let o;0!==(o=c(n,"col")).length&&r.setColor(new S3Vector(o[0],o[1],o[2],o[3])),0!==(o=c(n,"dif")).length&&r.setDiffuse(o[0]),0!==(o=c(n,"amb")).length&&r.setAmbient(new S3Vector(o[0],o[0],o[0])),0!==(o=c(n,"amb_col")).length&&r.setAmbient(new S3Vector(o[0],o[1],o[2])),0!==(o=c(n,"emi")).length&&r.setEmission(new S3Vector(o[0],o[0],o[0])),0!==(o=c(n,"emi_col")).length&&r.setEmission(new S3Vector(o[0],o[1],o[2])),0!==(o=c(n,"spc")).length&&r.setSpecular(new S3Vector(o[0],o[0],o[0])),0!==(o=c(n,"spc_col")).length&&r.setSpecular(new S3Vector(o[0],o[1],o[2])),0!==(o=c(n,"power")).length&&r.setPower(o[0]),0!==(o=c(n,"reflect")).length&&r.setReflect(o[0]),(o=l(n,"tex"))&&r.setTextureColor(s+o),(o=l(n,"bump"))&&r.setTextureNormal(s+o),e.addMaterial(r)}else if("vertex"===h){const i=a(n),s=new S3Vector(i[0],i[1],i[2]),r=t.createVertex(s);e.addVertex(r)}else if("face"===h){const i=parseInt(m),s=c(n,"V"),r=c(n,"UV"),o=[];let h=c(n,"M");if(h=0===h.length?0:h[0],0!==r.length)for(let t=0;t<i;t++)o[t]=new S3Vector(r[2*t],r[2*t+1],0);for(let n=0;n<i-2;n++){const i=n%2==0?t.createTriangleIndex(n,n+1,n+2,s,h,o):t.createTriangleIndex(n-1,n+1,n+2,s,h,o);e.addTriangleIndex(i)}}}else h=o.pop();else o.push(h),h=m}return!0},output:function(t){const e=[],i=t.getVertexArray(),n=t.getTriangleIndexArray(),s=t.getMaterialArray();e.push("Material "+s.length+" {");for(let t=0;t<s.length;t++){const i=s[t];e.push('\t"'+i.name+'" col(1.000 1.000 1.000 1.000) dif(0.800) amb(0.600) emi(0.000) spc(0.000) power(5.00)')}e.push("}"),e.push('Object "obj1" {'),e.push("\tvertex "+i.length+" {");for(let t=0;t<i.length;t++){const n=i[t].position;e.push("\t\t"+n.x+" "+n.y+" "+n.z)}e.push("}"),e.push("\tface "+n.length+" {");for(let t=0;t<n.length;t++){const i=n[t];let s="\t\t3";s+=" V("+i.index[0]+" "+i.index[1]+" "+i.index[2]+")",s+=" M("+i.materialIndex+")",void 0!==i.uv&&null!==i.uv[0]&&(s+=" UV("+i.uv[0]+" "+i.uv[1]+" "+i.uv[2]+")"),e.push(s)}return e.push("\t}"),e.push("}"),e.join("\n")}},S3MeshLoaderOBJ={name:"OBJ",input:function(t,e,i,n){const s=i.split("\n"),r=[],o=[];for(let t=0;t<s.length;t++){const e=function(t){return t.replace(/^\s+|\s+$/g,"")}(s[t].split("#")[0]);if(0!==e.length){const t=e.split(" ");if("v"===t[0]){const e=new S3Vector(parseFloat(t[1]),parseFloat(t[2]),parseFloat(t[3]));r.push(e)}else if("vt"===t[1]){new S3Vector(parseFloat(t[1]),parseFloat(t[2]),parseFloat(t[3]))}else if("vn"===t[2]){new S3Vector(parseFloat(t[1]),parseFloat(t[2]),parseFloat(t[3]))}else if("f"===t[0]){const e=t.length-3;for(let i=0;i<e;i++){const e=[];e[0]=t[1+i],e[1]=t[1+i+1],e[2]=t[1+i+2];const n=[],s=[],r=[];for(let t=0;t<3;t++){const i=e[t].split("/");1===i.length?n[t]=parseInt(i[0],10)-1:2===i.length?(n[t]=parseInt(i[0],10)-1,s[t]=parseInt(i[1],10)-1):3===i.length&&(0!==i[1].length?(n[t]=parseInt(i[0],10)-1,s[t]=parseInt(i[1],10)-1,r[t]=parseInt(i[2],10)-1):(n[t]=parseInt(i[0],10)-1,s[t]=null,r[t]=parseInt(i[2],10)-1))}o.push(n)}}}}const h=t.createMaterial();e.addMaterial(h);for(let i=0;i<r.length;i++){const n=t.createVertex(r[i]);e.addVertex(n)}for(let i=0;i<o.length;i++){const n=t.createTriangleIndex(0,1,2,o[i],0);e.addTriangleIndex(n)}return!0}},S3MeshLoader={inputData:function(t,e,i){const n=t.createMesh(),s=function(e,i,s){n._init();const r=S3MeshLoader._DATA_INPUT_FUNCTION[i](t,n,e,s);n.setComplete(r)};if(("string"==typeof e||e instanceof String)&&-1===e.indexOf("\n")){const n=function(t){s(t,i,e)};t._download(e,n)}else s(e,i,"");return n},outputData:function(t,e){return S3MeshLoader._DATA_OUTPUT_FUNCTION[e](t)}};S3MeshLoader.TYPE={JSON:S3MeshLoaderJSON.name,MQO:S3MeshLoaderMQO.name,OBJ:S3MeshLoaderOBJ.name},S3MeshLoader._DATA_INPUT_FUNCTION={},S3MeshLoader._DATA_OUTPUT_FUNCTION={},S3MeshLoader._DATA_OUTPUT_FUNCTION[S3MeshLoaderJSON.name]=S3MeshLoaderJSON.output,S3MeshLoader._DATA_INPUT_FUNCTION[S3MeshLoaderJSON.name]=S3MeshLoaderJSON.input,S3MeshLoader._DATA_OUTPUT_FUNCTION[S3MeshLoaderMQO.name]=S3MeshLoaderMQO.output,S3MeshLoader._DATA_INPUT_FUNCTION[S3MeshLoaderMQO.name]=S3MeshLoaderMQO.input,S3MeshLoader._DATA_INPUT_FUNCTION[S3MeshLoaderOBJ.name]=S3MeshLoaderOBJ.input;class S3Plane{constructor(t,e){e instanceof S3Vector?(this.n=t,this.d=this.n.dot(e)):(this.n=t,this.d=e)}getDistance(t){return t.dot(this.n)-this.d}getNearestPoint(t){return this.n.mul(-this.getDistance(t)).add(t)}isHitPosition(t){return this.getDistance(t)<0}toString(){return"Plane("+this.n.toString()+", ["+this.d+"])"}}class IDSwitch{constructor(){this._initIDSwitch()}_initIDSwitch(){this.istyped=!1,this.ispressed=!1,this.isreleased=!1,this.pressed_time=0}clone(){const t=new IDSwitch;return t.istyped=this.istyped,t.ispressed=this.ispressed,t.isreleased=this.isreleased,t.pressed_time=this.pressed_time,t}keyPressed(){this.ispressed||(this.istyped=!0),this.ispressed=!0,this.pressed_time++}keyReleased(){this.ispressed=!1,this.isreleased=!0,this.pressed_time=0}focusLost(){this.keyReleased()}pickInput(t){if(!(t instanceof IDSwitch))throw"IllegalArgumentException";t.ispressed=this.ispressed,t.istyped=this.istyped,t.isreleased=this.isreleased,t.pressed_time=this.pressed_time,this.isreleased=!1,this.istyped=!1}}class IDPosition{constructor(t,e){this._initIDPosition(t,e)}_initIDPosition(t,e){if(t instanceof IDPosition){const e=t;this.set(e)}else void 0===t?(this.x=0,this.y=0):2===arguments.length?this.set(t,e):(this.x=0,this.y=0)}clone(){return new IDPosition(this)}set(t,e){if(t instanceof IDPosition){const e=t;this.x=e.x,this.y=e.y}else this.x=t,this.y=e}add(t,e){if(t instanceof IDPosition){const e=t;this.x+=e.x,this.y+=e.y}else this.x+=t,this.y+=e}sub(t,e){if(t instanceof IDPosition){const e=t;this.x-=e.x,this.y-=e.y}else this.x-=t,this.y-=e}static norm(t,e){const i=t.x-e.x,n=t.y-e.y;return Math.sqrt(i*i+n*n)}}class IDDraggableSwitch{constructor(t){this._initIDDraggableSwitch(t)}_initIDDraggableSwitch(t){this.mask=t,this.switch=new IDSwitch,this.client=new IDPosition,this.deltaBase=new IDPosition,this.dragged=new IDPosition}clone(){const t=new IDDraggableSwitch;return t.mask=this.mask,t.switch=this.switch.clone(),t.client=this.client.clone(),t.deltaBase=this.deltaBase.clone(),t.dragged=this.dragged.clone(),t}correctionForDOM(t){let e=t.target;return e||(e=t.currentTarget),void 0===e?new IDPosition(t.clientX,t.clientY):new IDPosition(t.clientX/e.clientWidth*e.width,t.clientY/e.clientHeight*e.height)}setPosition(t){const e=this.correctionForDOM(t);this.client.set(e),this.deltaBase.set(e),this.dragged._initIDPosition()}mousePressed(t){const e=this.correctionForDOM(t);t.button===this.mask&&(this.switch.ispressed||this.dragged._initIDPosition(),this.switch.keyPressed(),this.client.set(e),this.deltaBase.set(e))}mouseReleased(t){t.button===this.mask&&this.switch.ispressed&&this.switch.keyReleased()}mouseMoved(t){const e=this.correctionForDOM(t);if(this.switch.ispressed){const t=new IDPosition(e);t.sub(this.deltaBase),this.dragged.add(t)}this.client.set(e.x,e.y),this.deltaBase.set(e.x,e.y)}focusLost(){this.switch.focusLost()}pickInput(t){if(!(t instanceof IDDraggableSwitch))throw"IllegalArgumentException";this.switch.pickInput(t.switch),t.client.set(this.client),t.dragged.set(this.dragged),this.dragged._initIDPosition()}}class IDMouse{constructor(){this._initIDMouse()}_initIDMouse(){this.left=new IDDraggableSwitch(IDMouse.MOUSE_EVENTS.BUTTON1_MASK),this.center=new IDDraggableSwitch(IDMouse.MOUSE_EVENTS.BUTTON2_MASK),this.right=new IDDraggableSwitch(IDMouse.MOUSE_EVENTS.BUTTON3_MASK),this.position=new IDPosition,this.wheelrotation=0}clone(){const t=new IDMouse;return t.left=this.left.clone(),t.center=this.center.clone(),t.right=this.right.clone(),t.position=this.position.clone(),t.wheelrotation=this.wheelrotation,t}mousePressed(t){this.left.mousePressed(t),this.center.mousePressed(t),this.right.mousePressed(t)}mouseReleased(t){this.left.mouseReleased(t),this.center.mouseReleased(t),this.right.mouseReleased(t)}mouseMoved(t){this.left.mouseMoved(t),this.center.mouseMoved(t),this.right.mouseMoved(t),this.position.x=this.left.client.x,this.position.y=this.left.client.y}mouseWheelMoved(t){0!==t.wheelDelta&&(this.wheelrotation+=t.deltaY>0?-1:1)}focusLost(){this.left.focusLost(),this.center.focusLost(),this.right.focusLost()}pickInput(t){if(!(t instanceof IDMouse))throw"IllegalArgumentException";this.left.pickInput(t.left),this.center.pickInput(t.center),this.right.pickInput(t.right),t.position.set(this.position),t.wheelrotation=this.wheelrotation,this.wheelrotation=0}setListenerOnElement(t){const e=this,i=function(t){e.mousePressed(t)},n=function(t){e.mouseReleased(t)},s=function(t){e.mouseMoved(t)},r=function(){e.focusLost()},o=function(t){e.mouseWheelMoved(t),t.preventDefault()},h=function(t){t.preventDefault()};t.style.cursor="crosshair",t.style.mozUserSelect="none",t.style.webkitUserSelect="none",t.style.msUserSelect="none",t.style.webkitTouchCallout="none",t.style.webkitTapHighlightColor="rgba(0,0,0,0)",t.addEventListener("mousedown",i,!1),t.addEventListener("mouseup",n,!1),t.addEventListener("mousemove",s,!1),t.addEventListener("mouseout",r,!1),t.addEventListener("wheel",o,!1),t.addEventListener("contextmenu",h,!1)}}IDMouse.MOUSE_EVENTS={BUTTON1_MASK:0,BUTTON2_MASK:1,BUTTON3_MASK:2};class IDTouch extends IDMouse{constructor(){super(),this._initIDTouch()}_initIDTouch(){this.touchcount_to_mask={1:IDMouse.MOUSE_EVENTS.BUTTON1_MASK,2:IDMouse.MOUSE_EVENTS.BUTTON3_MASK,3:IDMouse.MOUSE_EVENTS.BUTTON2_MASK};const t=this;this._mousePressed=function(e){t.mousePressed(e)},this._mouseReleased=function(e){t.mouseReleased(e)},this._mouseMoved=function(e){t.mouseMoved(e)},this.isdoubletouch=!1}_initPosition(t){this.left.setPosition(t),this.right.setPosition(t),this.center.setPosition(t)}_MultiTouchToMouse(t){let e=0,i=0;for(let n=0;n<t.touches.length;n++)e+=t.touches[n].clientX,i+=t.touches[n].clientY;const n={};if(t.touches.length>0){n.clientX=e/t.touches.length,n.clientY=i/t.touches.length,n.button=this.touchcount_to_mask[t.touches.length];const s=t.touches[0];n.target=s.target?s.target:s.currentTarget}else n.clientX=0,n.clientY=0,n.button=0;return n.touchcount=t.touches.length,n}_MoveMultiTouch(t){if(2===t.touches.length){const e=t.touches[0],i=t.touches[1];if(!1===this.isdoubletouch)this.isdoubletouch=!0,this.doubleposition=[],this.doubleposition[0]=new IDPosition(e.clientX,e.clientY),this.doubleposition[1]=new IDPosition(i.clientX,i.clientY);else{const t=new IDPosition(e.clientX,e.clientY),n=new IDPosition(i.clientX,i.clientY),s=IDPosition.norm(this.doubleposition[0],this.doubleposition[1])-IDPosition.norm(t,n);this.doubleposition[0]=t,this.doubleposition[1]=n;const r=Math.abs(s)<10?.01*Math.abs(s):.5;this.wheelrotation+=(s>0?-1:1)*r}}else this.isdoubletouch}_actFuncMask(t,e,i,n){for(const s in IDMouse.MOUSE_EVENTS)t.button=IDMouse.MOUSE_EVENTS[s],IDMouse.MOUSE_EVENTS[s]===n?e(t):i(t)}touchStart(t){const e=this._MultiTouchToMouse(t);this._initPosition(e),this._actFuncMask(e,this._mousePressed,this._mouseReleased,e.button)}touchEnd(t){const e=this._MultiTouchToMouse(t);this._actFuncMask(e,this._mouseReleased,this._mouseReleased,e.button)}touchMove(t){this._MoveMultiTouch(t);const e=this._MultiTouchToMouse(t);this._actFuncMask(e,this._mouseMoved,this._mouseMoved,e.button)}setListenerOnElement(t){super.setListenerOnElement(t);const e=this,i=function(t){e.touchStart(t)},n=function(t){e.touchEnd(t)},s=function(t){e.touchMove(t),t.preventDefault()};t.addEventListener("touchstart",i,!1),t.addEventListener("touchend",n,!1),t.addEventListener("touchmove",s,!1),t.addEventListener("touchcancel",n,!1)}}const IDTools={noScroll:function(){const t=function(){document.body.style.height="100%",document.body.style.overflow="hidden",document.documentElement.height="100%",document.documentElement.overflow="hidden"};window.addEventListener("load",t,!1)}},Device={DraggableSwitch:IDDraggableSwitch,Mouse:IDMouse,Position:IDPosition,Switch:IDSwitch,Touch:IDTouch,Tools:IDTools};class CameraController{constructor(){this.mouse=new Device.Touch,this.moveDistance=4,this.moveRotate=.5,this.moveTranslateRelative=.1}setCanvas(t){this.mouse.setListenerOnElement(t)}setCamera(t){this.camera=t.clone()}getCamera(){const t=new Device.Touch;this.mouse.pickInput(t),this.camera.translateRelative(new S3Vector(-t.left.dragged.x*this.moveTranslateRelative,t.left.dragged.y*this.moveTranslateRelative,0)),this.camera.addRotateY(t.right.dragged.x*this.moveRotate),this.camera.addRotateX(-t.right.dragged.y*this.moveRotate);{let e=this.camera.getDistance();const i=t.wheelrotation;e-=i*this.moveDistance*Math.log(e),this.camera.setDistance(e)}return this.camera}}const S3={System:S3System,GLSystem:S3GLSystem,Math:S3Math,Angles:S3Angles,Vector:S3Vector,Matrix:S3Matrix,Plane:S3Plane,SYSTEM_MODE:S3System.SYSTEM_MODE,DEPTH_MODE:S3System.DEPTH_MODE,DIMENSION_MODE:S3System.DIMENSION_MODE,VECTOR_MODE:S3System.VECTOR_MODE,FRONT_FACE:S3System.FRONT_FACE,CULL_MODE:S3System.CULL_MODE,LIGHT_MODE:S3Light.MODE,MESH_TYPE:S3MeshLoader.TYPE,MeshLoader:S3MeshLoader,CameraController:CameraController},SenkoS3=S3;export default SenkoS3;
